<?php
/**
 * ProcessWire PageListSelectUnselectButton
 *
 * Copyright (C) 2016 by Bernhard Baumrock
 * This file licensed under MIT License
 */

class PageListSelectUnselectButton extends WireData implements Module {

    /**
     * getModuleInfo is a module required by all modules to tell ProcessWire about them
     *
     * @return array
     *
     */
    public static function getModuleInfo() {

        return array(
            'title' => 'PageListSelectUnselectButton',
            'version' => 100,
            'summary' => 'Display an unselect button beside a PageListSelect',
            'href' => 'https://processwire.com',
            'singular' => true,
            'autoload' => true,
            );
    }

    /**
     * Initialize the module
     */
    public function init() {
        $this->addHookAfter('Page::render', $this, 'unselectbutton'); 
    }

    /**
     * Example1 hooks into the pages->save method and displays a notice every time a page is saved
     *
     */
    public function unselectbutton($event) {
        $page = $event->object;
        // only add this to admin pages
        if($page->template != 'admin') return;

        ob_start(); ?>
        <script type="text/javascript">
            var confirmtext = '<?php echo _("click again to confirm"); ?>';
            var unselecttext = '<?php echo _("unselect"); ?>';
            var unselectbtn = '<li class="PageListActionSelect PageListSelectUnselectButton"><a href="#">' + unselecttext + '</a></li>';

            $( document ).ready(function() {

                // selector to find the fields
                var selector = '<?php echo $this->selector; ?>';

                // init unselect buttons on first load
                $(selector).each(function() {
                    unselectbutton(this);
                });

                // show/hide unselect button on field change
                $(selector).find('input').change(function() {
                    unselectbutton($(this).closest(selector));
                });

                // handle click on the button
                $('body').on('click', '.PageListSelectUnselectButton a', function(e) {
                    e.preventDefault();
                    if($(this).hasClass('confirmunselect')) {
                        $(this).closest(selector).find('p.PageListSelectName').html('');
                        $(this).closest(selector).find('input').val('');
                        $(this).closest(selector).find('.PageListSelectUnselectButton').remove();
                    }
                    else {
                        $(this).addClass('confirmunselect').text(confirmtext);
                    }
                });
            });
            function unselectbutton(el) {
                if($(el).find('input').val() != '' && $(el).find('input').val() != 0) {
                    if($(el).find('.PageListSelectUnselectButton').length == 0) {
                        $(el).find('ul.PageListActions').append(unselectbtn);
                    }
                }
                else {
                    $(el).find('.PageListSelectUnselectButton').remove();
                }
                // reset confirmbutton
                if($(el).find('.confirmunselect').length == 1) {
                    $(el).find('.confirmunselect').removeClass('confirmunselect').text(unselecttext);
                }
            }
        </script>
        <?php
        $script = ob_get_clean();
        $event->return = str_replace("</body>", $script."</body>", $event->return); 
    }
}
